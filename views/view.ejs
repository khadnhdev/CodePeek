<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Render</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism.min.css" rel="stylesheet" />
    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .header {
            padding: 4px 8px;
            background: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            font-size: 0.85rem;
        }
        .content {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        .output-frame {
            width: 100%;
            height: 100%;
            border: none;
        }
        .code-container {
            height: 100%;
            overflow: auto;
            padding: 12px;
            background: #f8f9fa;
            font-size: 0.9rem;
        }
        .code-header {
            display: flex;
            justify-content: flex-end;
            padding: 4px 8px;
            background: #e9ecef;
            border-bottom: 1px solid #dee2e6;
        }
        .nav-link {
            display: flex;
            align-items: center;
            gap: 4px;
            padding: 4px 8px;
            font-size: 0.85rem;
        }
        .nav-link i {
            font-size: 1em;
        }
        .tab-content {
            flex: 1;
            overflow: hidden;
        }
        .tab-pane {
            height: 100%;
        }
        .btn-copy {
            padding: 2px 6px;
            font-size: 0.75rem;
            line-height: 1.2;
            border-radius: 3px;
        }
        .btn-copy i {
            font-size: 0.85rem;
        }
        .nav-pills .nav-link {
            min-height: 24px;
            line-height: 1;
        }
        .nav-pills .nav-link.active {
            padding: 4px 8px;
        }
    </style>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <div class="header">
        <ul class="nav nav-pills" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" data-bs-toggle="tab" href="#output" role="tab">
                    <i class="bi bi-play-circle"></i>
                    Output
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#code" role="tab">
                    <i class="bi bi-code-slash"></i>
                    Source
                </a>
            </li>
            <li class="nav-item ms-auto">
                <a href="/" class="nav-link">
                    <i class="bi bi-house"></i>
                </a>
            </li>
        </ul>
    </div>

    <div class="content">
        <div class="tab-content">
            <div class="tab-pane fade show active" id="output" role="tabpanel">
                <iframe id="renderFrame" class="output-frame" 
                        src="/render-content/<%= render.id %>" 
                        sandbox="allow-scripts allow-same-origin allow-modals allow-forms allow-popups">
                </iframe>
            </div>
            <div class="tab-pane fade" id="code" role="tabpanel">
                <div class="code-header">
                    <button class="btn btn-copy btn-outline-secondary" onclick="copyToClipboard()">
                        <i class="bi bi-clipboard"></i> Copy
                    </button>
                </div>
                <div class="code-container">
                    <pre><code class="language-html"><%= render.input_code %></code></pre>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js"></script>
    <script>
        function copyToClipboard() {
            const code = `<%= render.input_code %>`;
            navigator.clipboard.writeText(code).then(() => {
                const btn = document.querySelector('.code-header button');
                const icon = btn.querySelector('i');
                const originalHtml = btn.innerHTML;
                
                icon.className = 'bi bi-check2';
                btn.classList.add('btn-success');
                
                setTimeout(() => {
                    btn.innerHTML = originalHtml;
                    btn.classList.remove('btn-success');
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy code:', err);
            });
        }

        // Hàm để decode HTML entities
        function decodeHtml(html) {
            const txt = document.createElement('textarea');
            txt.innerHTML = html;
            return txt.value;
        }

        // Hàm so sánh nội dung chi tiết
        function isContentEqual(oldContent, newContent) {
            // Chuẩn hóa content bằng cách:
            const normalize = (content) => {
                return content
                    .trim() // Bỏ khoảng trắng đầu cuối
                    .replace(/\s+/g, ' ') // Gộp nhiều khoảng trắng thành 1
                    .replace(/\n\s*/g, '\n') // Chuẩn hóa xuống dòng
                    .replace(/>\s+</g, '><'); // Bỏ khoảng trắng giữa các tags
            };

            return normalize(oldContent) === normalize(newContent);
        }

        let currentViews = <%= render.views %>;
        let currentContent = decodeHtml(`<%= render.input_code %>`);
        
        // Khởi tạo socket connection
        const socket = io();
        
        // Join render room
        socket.emit('join-render', '<%= render.id %>');
        
        // Listen for updates
        socket.on('render-updated', (data) => {
            console.log('Received update:', data);
            
            const newContent = decodeHtml(data.content);

            // So sánh kỹ nội dung cũ và mới
            if (!isContentEqual(currentContent, newContent)) {
                console.log('Content changed, updating render...');
                
                // Cập nhật code preview nếu đang ở tab source
                const codeElement = document.querySelector('.code-container code');
                if (codeElement) {
                    codeElement.textContent = newContent;
                    Prism.highlightElement(codeElement);
                }

                // Cập nhật iframe
                const iframe = document.getElementById('renderFrame');
                iframe.src = iframe.src;

                // Lưu content mới
                currentContent = newContent;
            } else {
                console.log('Content unchanged, skipping update');
            }
        });

        // Handle socket connection errors
        socket.on('connect_error', (error) => {
            console.error('Socket connection error:', error);
        });

        socket.on('disconnect', (reason) => {
            console.log('Socket disconnected:', reason);
        });

        socket.on('reconnect', (attemptNumber) => {
            console.log('Socket reconnected after', attemptNumber, 'attempts');
            // Rejoin render room after reconnection
            socket.emit('join-render', '<%= render.id %>');
        });
    </script>
</body>
</html> 